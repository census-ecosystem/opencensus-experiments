// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interoperability_test.proto

package interop

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_SUCCESS Status = 0
	Status_FAILURE Status = 1
	Status_RUNNING Status = 2
)

var Status_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
	2: "RUNNING",
}
var Status_value = map[string]int32{
	"SUCCESS": 0,
	"FAILURE": 1,
	"RUNNING": 2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{0}
}

type BasePort int32

const (
	BasePort_INVALID_BASE_PORT BasePort = 0
	BasePort_JAVA_BASE_PORT    BasePort = 10100
	BasePort_GO_BASE_PORT      BasePort = 10200
	BasePort_NODEJS_BASE_PORT  BasePort = 10300
	BasePort_PYTHON_BASE_PORT  BasePort = 10400
	BasePort_CPP_BASE_PORT     BasePort = 10500
)

var BasePort_name = map[int32]string{
	0:     "INVALID_BASE_PORT",
	10100: "JAVA_BASE_PORT",
	10200: "GO_BASE_PORT",
	10300: "NODEJS_BASE_PORT",
	10400: "PYTHON_BASE_PORT",
	10500: "CPP_BASE_PORT",
}
var BasePort_value = map[string]int32{
	"INVALID_BASE_PORT": 0,
	"JAVA_BASE_PORT":    10100,
	"GO_BASE_PORT":      10200,
	"NODEJS_BASE_PORT":  10300,
	"PYTHON_BASE_PORT":  10400,
	"CPP_BASE_PORT":     10500,
}

func (x BasePort) String() string {
	return proto.EnumName(BasePort_name, int32(x))
}
func (BasePort) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{1}
}

type Spec_Transport int32

const (
	Spec_GRPC Spec_Transport = 0
	Spec_HTTP Spec_Transport = 1
)

var Spec_Transport_name = map[int32]string{
	0: "GRPC",
	1: "HTTP",
}
var Spec_Transport_value = map[string]int32{
	"GRPC": 0,
	"HTTP": 1,
}

func (x Spec_Transport) String() string {
	return proto.EnumName(Spec_Transport_name, int32(x))
}
func (Spec_Transport) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{2, 0}
}

type Spec_Propagation int32

const (
	Spec_BINARY_FORMAT_PROPAGATION        Spec_Propagation = 0
	Spec_B3_FORMAT_PROPAGATION            Spec_Propagation = 1
	Spec_TRACE_CONTEXT_FORMAT_PROPAGATION Spec_Propagation = 2
)

var Spec_Propagation_name = map[int32]string{
	0: "BINARY_FORMAT_PROPAGATION",
	1: "B3_FORMAT_PROPAGATION",
	2: "TRACE_CONTEXT_FORMAT_PROPAGATION",
}
var Spec_Propagation_value = map[string]int32{
	"BINARY_FORMAT_PROPAGATION":        0,
	"B3_FORMAT_PROPAGATION":            1,
	"TRACE_CONTEXT_FORMAT_PROPAGATION": 2,
}

func (x Spec_Propagation) String() string {
	return proto.EnumName(Spec_Propagation_name, int32(x))
}
func (Spec_Propagation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{2, 1}
}

type RegistrationRequest struct {
	ServerName           string     `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Services             []*Service `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RegistrationRequest) Reset()         { *m = RegistrationRequest{} }
func (m *RegistrationRequest) String() string { return proto.CompactTextString(m) }
func (*RegistrationRequest) ProtoMessage()    {}
func (*RegistrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{0}
}
func (m *RegistrationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistrationRequest.Unmarshal(m, b)
}
func (m *RegistrationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistrationRequest.Marshal(b, m, deterministic)
}
func (dst *RegistrationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistrationRequest.Merge(dst, src)
}
func (m *RegistrationRequest) XXX_Size() int {
	return xxx_messageInfo_RegistrationRequest.Size(m)
}
func (m *RegistrationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistrationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegistrationRequest proto.InternalMessageInfo

func (m *RegistrationRequest) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *RegistrationRequest) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type Service struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Host                 string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Spec                 *Spec    `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{1}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (dst *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(dst, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Service) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Service) GetSpec() *Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type Spec struct {
	Transport            Spec_Transport   `protobuf:"varint,1,opt,name=transport,proto3,enum=interop.Spec_Transport" json:"transport,omitempty"`
	Propagation          Spec_Propagation `protobuf:"varint,2,opt,name=propagation,proto3,enum=interop.Spec_Propagation" json:"propagation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Spec) Reset()         { *m = Spec{} }
func (m *Spec) String() string { return proto.CompactTextString(m) }
func (*Spec) ProtoMessage()    {}
func (*Spec) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{2}
}
func (m *Spec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spec.Unmarshal(m, b)
}
func (m *Spec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spec.Marshal(b, m, deterministic)
}
func (dst *Spec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spec.Merge(dst, src)
}
func (m *Spec) XXX_Size() int {
	return xxx_messageInfo_Spec.Size(m)
}
func (m *Spec) XXX_DiscardUnknown() {
	xxx_messageInfo_Spec.DiscardUnknown(m)
}

var xxx_messageInfo_Spec proto.InternalMessageInfo

func (m *Spec) GetTransport() Spec_Transport {
	if m != nil {
		return m.Transport
	}
	return Spec_GRPC
}

func (m *Spec) GetPropagation() Spec_Propagation {
	if m != nil {
		return m.Propagation
	}
	return Spec_BINARY_FORMAT_PROPAGATION
}

type CommonResponseStatus struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=interop.Status" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonResponseStatus) Reset()         { *m = CommonResponseStatus{} }
func (m *CommonResponseStatus) String() string { return proto.CompactTextString(m) }
func (*CommonResponseStatus) ProtoMessage()    {}
func (*CommonResponseStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{3}
}
func (m *CommonResponseStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResponseStatus.Unmarshal(m, b)
}
func (m *CommonResponseStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResponseStatus.Marshal(b, m, deterministic)
}
func (dst *CommonResponseStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResponseStatus.Merge(dst, src)
}
func (m *CommonResponseStatus) XXX_Size() int {
	return xxx_messageInfo_CommonResponseStatus.Size(m)
}
func (m *CommonResponseStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResponseStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResponseStatus proto.InternalMessageInfo

func (m *CommonResponseStatus) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUCCESS
}

func (m *CommonResponseStatus) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type RegistrationResponse struct {
	Status               *CommonResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RegistrationResponse) Reset()         { *m = RegistrationResponse{} }
func (m *RegistrationResponse) String() string { return proto.CompactTextString(m) }
func (*RegistrationResponse) ProtoMessage()    {}
func (*RegistrationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{4}
}
func (m *RegistrationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistrationResponse.Unmarshal(m, b)
}
func (m *RegistrationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistrationResponse.Marshal(b, m, deterministic)
}
func (dst *RegistrationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistrationResponse.Merge(dst, src)
}
func (m *RegistrationResponse) XXX_Size() int {
	return xxx_messageInfo_RegistrationResponse.Size(m)
}
func (m *RegistrationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistrationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegistrationResponse proto.InternalMessageInfo

func (m *RegistrationResponse) GetStatus() *CommonResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type TestRequest struct {
	Id                   int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ServiceHops          []*ServiceHop `protobuf:"bytes,3,rep,name=service_hops,json=serviceHops,proto3" json:"service_hops,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TestRequest) Reset()         { *m = TestRequest{} }
func (m *TestRequest) String() string { return proto.CompactTextString(m) }
func (*TestRequest) ProtoMessage()    {}
func (*TestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{5}
}
func (m *TestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequest.Unmarshal(m, b)
}
func (m *TestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequest.Marshal(b, m, deterministic)
}
func (dst *TestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequest.Merge(dst, src)
}
func (m *TestRequest) XXX_Size() int {
	return xxx_messageInfo_TestRequest.Size(m)
}
func (m *TestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequest proto.InternalMessageInfo

func (m *TestRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestRequest) GetServiceHops() []*ServiceHop {
	if m != nil {
		return m.ServiceHops
	}
	return nil
}

type ServiceHop struct {
	Service              *Service `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Tags                 []*Tag   `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceHop) Reset()         { *m = ServiceHop{} }
func (m *ServiceHop) String() string { return proto.CompactTextString(m) }
func (*ServiceHop) ProtoMessage()    {}
func (*ServiceHop) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{6}
}
func (m *ServiceHop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceHop.Unmarshal(m, b)
}
func (m *ServiceHop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceHop.Marshal(b, m, deterministic)
}
func (dst *ServiceHop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceHop.Merge(dst, src)
}
func (m *ServiceHop) XXX_Size() int {
	return xxx_messageInfo_ServiceHop.Size(m)
}
func (m *ServiceHop) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceHop.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceHop proto.InternalMessageInfo

func (m *ServiceHop) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ServiceHop) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Tag struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{7}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (dst *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(dst, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Tag) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TestResponse struct {
	Id                   int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               []*CommonResponseStatus `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TestResponse) Reset()         { *m = TestResponse{} }
func (m *TestResponse) String() string { return proto.CompactTextString(m) }
func (*TestResponse) ProtoMessage()    {}
func (*TestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{8}
}
func (m *TestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResponse.Unmarshal(m, b)
}
func (m *TestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResponse.Marshal(b, m, deterministic)
}
func (dst *TestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResponse.Merge(dst, src)
}
func (m *TestResponse) XXX_Size() int {
	return xxx_messageInfo_TestResponse.Size(m)
}
func (m *TestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestResponse proto.InternalMessageInfo

func (m *TestResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestResponse) GetStatus() []*CommonResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type InteropRunRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InteropRunRequest) Reset()         { *m = InteropRunRequest{} }
func (m *InteropRunRequest) String() string { return proto.CompactTextString(m) }
func (*InteropRunRequest) ProtoMessage()    {}
func (*InteropRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{9}
}
func (m *InteropRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InteropRunRequest.Unmarshal(m, b)
}
func (m *InteropRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InteropRunRequest.Marshal(b, m, deterministic)
}
func (dst *InteropRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteropRunRequest.Merge(dst, src)
}
func (m *InteropRunRequest) XXX_Size() int {
	return xxx_messageInfo_InteropRunRequest.Size(m)
}
func (m *InteropRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InteropRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InteropRunRequest proto.InternalMessageInfo

type InteropRunResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InteropRunResponse) Reset()         { *m = InteropRunResponse{} }
func (m *InteropRunResponse) String() string { return proto.CompactTextString(m) }
func (*InteropRunResponse) ProtoMessage()    {}
func (*InteropRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{10}
}
func (m *InteropRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InteropRunResponse.Unmarshal(m, b)
}
func (m *InteropRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InteropRunResponse.Marshal(b, m, deterministic)
}
func (dst *InteropRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteropRunResponse.Merge(dst, src)
}
func (m *InteropRunResponse) XXX_Size() int {
	return xxx_messageInfo_InteropRunResponse.Size(m)
}
func (m *InteropRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InteropRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InteropRunResponse proto.InternalMessageInfo

func (m *InteropRunResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type InteropResultRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InteropResultRequest) Reset()         { *m = InteropResultRequest{} }
func (m *InteropResultRequest) String() string { return proto.CompactTextString(m) }
func (*InteropResultRequest) ProtoMessage()    {}
func (*InteropResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{11}
}
func (m *InteropResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InteropResultRequest.Unmarshal(m, b)
}
func (m *InteropResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InteropResultRequest.Marshal(b, m, deterministic)
}
func (dst *InteropResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteropResultRequest.Merge(dst, src)
}
func (m *InteropResultRequest) XXX_Size() int {
	return xxx_messageInfo_InteropResultRequest.Size(m)
}
func (m *InteropResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InteropResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InteropResultRequest proto.InternalMessageInfo

func (m *InteropResultRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response containing all test cases.
type InteropResultResponse struct {
	Id                   int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               *CommonResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Result               []*TestResult         `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *InteropResultResponse) Reset()         { *m = InteropResultResponse{} }
func (m *InteropResultResponse) String() string { return proto.CompactTextString(m) }
func (*InteropResultResponse) ProtoMessage()    {}
func (*InteropResultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{12}
}
func (m *InteropResultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InteropResultResponse.Unmarshal(m, b)
}
func (m *InteropResultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InteropResultResponse.Marshal(b, m, deterministic)
}
func (dst *InteropResultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteropResultResponse.Merge(dst, src)
}
func (m *InteropResultResponse) XXX_Size() int {
	return xxx_messageInfo_InteropResultResponse.Size(m)
}
func (m *InteropResultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InteropResultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InteropResultResponse proto.InternalMessageInfo

func (m *InteropResultResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *InteropResultResponse) GetStatus() *CommonResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InteropResultResponse) GetResult() []*TestResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// Result for one test case.
type TestResult struct {
	Id                   int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               *CommonResponseStatus   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ServiceHops          []*ServiceHop           `protobuf:"bytes,4,rep,name=service_hops,json=serviceHops,proto3" json:"service_hops,omitempty"`
	Details              []*CommonResponseStatus `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TestResult) Reset()         { *m = TestResult{} }
func (m *TestResult) String() string { return proto.CompactTextString(m) }
func (*TestResult) ProtoMessage()    {}
func (*TestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_interoperability_test_e2e6db8104e556ff, []int{13}
}
func (m *TestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResult.Unmarshal(m, b)
}
func (m *TestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResult.Marshal(b, m, deterministic)
}
func (dst *TestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResult.Merge(dst, src)
}
func (m *TestResult) XXX_Size() int {
	return xxx_messageInfo_TestResult.Size(m)
}
func (m *TestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResult.DiscardUnknown(m)
}

var xxx_messageInfo_TestResult proto.InternalMessageInfo

func (m *TestResult) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestResult) GetStatus() *CommonResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *TestResult) GetServiceHops() []*ServiceHop {
	if m != nil {
		return m.ServiceHops
	}
	return nil
}

func (m *TestResult) GetDetails() []*CommonResponseStatus {
	if m != nil {
		return m.Details
	}
	return nil
}

func init() {
	proto.RegisterType((*RegistrationRequest)(nil), "interop.RegistrationRequest")
	proto.RegisterType((*Service)(nil), "interop.Service")
	proto.RegisterType((*Spec)(nil), "interop.Spec")
	proto.RegisterType((*CommonResponseStatus)(nil), "interop.CommonResponseStatus")
	proto.RegisterType((*RegistrationResponse)(nil), "interop.RegistrationResponse")
	proto.RegisterType((*TestRequest)(nil), "interop.TestRequest")
	proto.RegisterType((*ServiceHop)(nil), "interop.ServiceHop")
	proto.RegisterType((*Tag)(nil), "interop.Tag")
	proto.RegisterType((*TestResponse)(nil), "interop.TestResponse")
	proto.RegisterType((*InteropRunRequest)(nil), "interop.InteropRunRequest")
	proto.RegisterType((*InteropRunResponse)(nil), "interop.InteropRunResponse")
	proto.RegisterType((*InteropResultRequest)(nil), "interop.InteropResultRequest")
	proto.RegisterType((*InteropResultResponse)(nil), "interop.InteropResultResponse")
	proto.RegisterType((*TestResult)(nil), "interop.TestResult")
	proto.RegisterEnum("interop.Status", Status_name, Status_value)
	proto.RegisterEnum("interop.BasePort", BasePort_name, BasePort_value)
	proto.RegisterEnum("interop.Spec_Transport", Spec_Transport_name, Spec_Transport_value)
	proto.RegisterEnum("interop.Spec_Propagation", Spec_Propagation_name, Spec_Propagation_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestExecutionServiceClient is the client API for TestExecutionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestExecutionServiceClient interface {
	Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*TestResponse, error)
}

type testExecutionServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestExecutionServiceClient(cc *grpc.ClientConn) TestExecutionServiceClient {
	return &testExecutionServiceClient{cc}
}

func (c *testExecutionServiceClient) Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*TestResponse, error) {
	out := new(TestResponse)
	err := c.cc.Invoke(ctx, "/interop.TestExecutionService/test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestExecutionServiceServer is the server API for TestExecutionService service.
type TestExecutionServiceServer interface {
	Test(context.Context, *TestRequest) (*TestResponse, error)
}

func RegisterTestExecutionServiceServer(s *grpc.Server, srv TestExecutionServiceServer) {
	s.RegisterService(&_TestExecutionService_serviceDesc, srv)
}

func _TestExecutionService_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestExecutionServiceServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/interop.TestExecutionService/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestExecutionServiceServer).Test(ctx, req.(*TestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestExecutionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "interop.TestExecutionService",
	HandlerType: (*TestExecutionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "test",
			Handler:    _TestExecutionService_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "interoperability_test.proto",
}

// RegistrationServiceClient is the client API for RegistrationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistrationServiceClient interface {
	Register(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*RegistrationResponse, error)
}

type registrationServiceClient struct {
	cc *grpc.ClientConn
}

func NewRegistrationServiceClient(cc *grpc.ClientConn) RegistrationServiceClient {
	return &registrationServiceClient{cc}
}

func (c *registrationServiceClient) Register(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*RegistrationResponse, error) {
	out := new(RegistrationResponse)
	err := c.cc.Invoke(ctx, "/interop.RegistrationService/register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistrationServiceServer is the server API for RegistrationService service.
type RegistrationServiceServer interface {
	Register(context.Context, *RegistrationRequest) (*RegistrationResponse, error)
}

func RegisterRegistrationServiceServer(s *grpc.Server, srv RegistrationServiceServer) {
	s.RegisterService(&_RegistrationService_serviceDesc, srv)
}

func _RegistrationService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/interop.RegistrationService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServiceServer).Register(ctx, req.(*RegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RegistrationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "interop.RegistrationService",
	HandlerType: (*RegistrationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "register",
			Handler:    _RegistrationService_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "interoperability_test.proto",
}

// InteropTestServiceClient is the client API for InteropTestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InteropTestServiceClient interface {
	Result(ctx context.Context, in *InteropResultRequest, opts ...grpc.CallOption) (*InteropResultResponse, error)
	// Runs the test asynchronously.
	Run(ctx context.Context, in *InteropRunRequest, opts ...grpc.CallOption) (*InteropRunResponse, error)
}

type interopTestServiceClient struct {
	cc *grpc.ClientConn
}

func NewInteropTestServiceClient(cc *grpc.ClientConn) InteropTestServiceClient {
	return &interopTestServiceClient{cc}
}

func (c *interopTestServiceClient) Result(ctx context.Context, in *InteropResultRequest, opts ...grpc.CallOption) (*InteropResultResponse, error) {
	out := new(InteropResultResponse)
	err := c.cc.Invoke(ctx, "/interop.InteropTestService/result", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *interopTestServiceClient) Run(ctx context.Context, in *InteropRunRequest, opts ...grpc.CallOption) (*InteropRunResponse, error) {
	out := new(InteropRunResponse)
	err := c.cc.Invoke(ctx, "/interop.InteropTestService/run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InteropTestServiceServer is the server API for InteropTestService service.
type InteropTestServiceServer interface {
	Result(context.Context, *InteropResultRequest) (*InteropResultResponse, error)
	// Runs the test asynchronously.
	Run(context.Context, *InteropRunRequest) (*InteropRunResponse, error)
}

func RegisterInteropTestServiceServer(s *grpc.Server, srv InteropTestServiceServer) {
	s.RegisterService(&_InteropTestService_serviceDesc, srv)
}

func _InteropTestService_Result_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InteropResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InteropTestServiceServer).Result(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/interop.InteropTestService/Result",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InteropTestServiceServer).Result(ctx, req.(*InteropResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InteropTestService_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InteropRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InteropTestServiceServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/interop.InteropTestService/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InteropTestServiceServer).Run(ctx, req.(*InteropRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InteropTestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "interop.InteropTestService",
	HandlerType: (*InteropTestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "result",
			Handler:    _InteropTestService_Result_Handler,
		},
		{
			MethodName: "run",
			Handler:    _InteropTestService_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "interoperability_test.proto",
}

func init() {
	proto.RegisterFile("interoperability_test.proto", fileDescriptor_interoperability_test_e2e6db8104e556ff)
}

var fileDescriptor_interoperability_test_e2e6db8104e556ff = []byte{
	// 864 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0xb6, 0x6c, 0x27, 0x4e, 0x8e, 0xd2, 0xa0, 0x6c, 0xec, 0xc1, 0x71, 0x09, 0x35, 0x3b, 0x1d,
	0xc8, 0x04, 0x30, 0x33, 0xce, 0x04, 0x2e, 0xb8, 0x41, 0x76, 0xdd, 0xc4, 0x9d, 0x46, 0x12, 0x6b,
	0xb9, 0x43, 0xb9, 0x31, 0xaa, 0xb3, 0xe3, 0x68, 0xb0, 0x2d, 0xb1, 0xbb, 0xee, 0xd0, 0x7b, 0xae,
	0xe8, 0x4b, 0xc0, 0x7b, 0xf0, 0x20, 0x7d, 0x10, 0x1e, 0x80, 0xd9, 0xd5, 0xaf, 0x1d, 0x65, 0xc6,
	0xdc, 0x9d, 0xfd, 0xce, 0xa7, 0xef, 0xec, 0x9e, 0xf3, 0xad, 0x16, 0x1e, 0xfb, 0x4b, 0x41, 0x59,
	0x10, 0x52, 0xe6, 0xbd, 0xf1, 0xe7, 0xbe, 0x78, 0x37, 0x11, 0x94, 0x8b, 0x4e, 0xc8, 0x02, 0x11,
	0xa0, 0x5a, 0x9c, 0xc4, 0xb7, 0x70, 0x4c, 0xe8, 0xcc, 0xe7, 0x82, 0x79, 0xc2, 0x0f, 0x96, 0x84,
	0xfe, 0xb6, 0xa2, 0x5c, 0xa0, 0x27, 0xa0, 0x73, 0xca, 0xde, 0x52, 0x36, 0x59, 0x7a, 0x0b, 0xda,
	0xd4, 0xda, 0xda, 0xd9, 0x3e, 0x81, 0x08, 0xb2, 0xbc, 0x05, 0x45, 0x5f, 0xc1, 0x9e, 0x5c, 0xf9,
	0x53, 0xca, 0x9b, 0xe5, 0x76, 0xe5, 0x4c, 0xef, 0x1a, 0x9d, 0x58, 0xb3, 0x33, 0x8a, 0x12, 0x24,
	0x65, 0xe0, 0x3b, 0xa8, 0xc5, 0x20, 0x42, 0x50, 0xcd, 0x49, 0xaa, 0x58, 0x62, 0x61, 0xc0, 0x44,
	0xb3, 0xdc, 0xd6, 0xce, 0x76, 0x88, 0x8a, 0x25, 0x76, 0x17, 0x70, 0xd1, 0xac, 0x44, 0x3c, 0x19,
	0xa3, 0xcf, 0xa0, 0xca, 0x43, 0x3a, 0x6d, 0x56, 0xdb, 0xda, 0x99, 0xde, 0x7d, 0x94, 0x15, 0x0c,
	0xe9, 0x94, 0xa8, 0x14, 0xfe, 0xb3, 0x0c, 0x55, 0xb9, 0x44, 0x97, 0xb0, 0x2f, 0x98, 0xb7, 0xe4,
	0x4a, 0x58, 0x16, 0x3b, 0xec, 0x7e, 0xbc, 0xf6, 0x41, 0xc7, 0x4d, 0xd2, 0x24, 0x63, 0xa2, 0xef,
	0x41, 0x0f, 0x59, 0x10, 0x7a, 0x33, 0xd5, 0x0e, 0xb5, 0xa3, 0xc3, 0xee, 0xc9, 0xfa, 0x87, 0x4e,
	0x46, 0x20, 0x79, 0x36, 0x7e, 0x02, 0xfb, 0xa9, 0x28, 0xda, 0x83, 0xea, 0x15, 0x71, 0xfa, 0x46,
	0x49, 0x46, 0xd7, 0xae, 0xeb, 0x18, 0x1a, 0x5e, 0x80, 0x9e, 0xfb, 0x18, 0x9d, 0xc2, 0x49, 0x6f,
	0x68, 0x99, 0xe4, 0xf5, 0xe4, 0xb9, 0x4d, 0x6e, 0x4c, 0x77, 0xe2, 0x10, 0xdb, 0x31, 0xaf, 0x4c,
	0x77, 0x68, 0x5b, 0x46, 0x09, 0x9d, 0x40, 0xa3, 0x77, 0x51, 0x94, 0xd2, 0xd0, 0x53, 0x68, 0xbb,
	0xc4, 0xec, 0x0f, 0x26, 0x7d, 0xdb, 0x72, 0x07, 0x3f, 0xb9, 0x45, 0xac, 0x32, 0x1e, 0x43, 0xbd,
	0x1f, 0x2c, 0x16, 0x72, 0xac, 0x3c, 0x0c, 0x96, 0x9c, 0x8e, 0x84, 0x27, 0x56, 0x1c, 0x7d, 0x01,
	0xbb, 0x5c, 0x45, 0x71, 0x63, 0x3e, 0xca, 0xce, 0xa7, 0x60, 0x12, 0xa7, 0x51, 0x1d, 0x76, 0x28,
	0x63, 0x01, 0x53, 0x7d, 0xd8, 0x27, 0xd1, 0x02, 0xdf, 0x40, 0x7d, 0xdd, 0x33, 0x91, 0x38, 0xba,
	0x5c, 0x93, 0xd5, 0xbb, 0xa7, 0xa9, 0x6c, 0xd1, 0x2e, 0x92, 0x22, 0xd8, 0x07, 0xdd, 0xa5, 0x5c,
	0x24, 0xd6, 0x3b, 0x84, 0xb2, 0x7f, 0xab, 0x14, 0x2a, 0xa4, 0xec, 0xdf, 0xa6, 0x86, 0x29, 0xe7,
	0x0c, 0xf3, 0x2d, 0x1c, 0xc4, 0xde, 0x9a, 0xdc, 0x05, 0x21, 0x6f, 0x56, 0x94, 0x03, 0x8f, 0x37,
	0x1d, 0x78, 0x1d, 0x84, 0x44, 0xe7, 0x69, 0xcc, 0xf1, 0xcf, 0x00, 0x59, 0x0a, 0x9d, 0x43, 0x2d,
	0x4e, 0xc6, 0x1b, 0xbe, 0x6f, 0xe1, 0x84, 0x80, 0xda, 0x50, 0x15, 0xde, 0x2c, 0xf1, 0xfa, 0x41,
	0x4a, 0x74, 0xbd, 0x19, 0x51, 0x19, 0xfc, 0x35, 0x54, 0x5c, 0x6f, 0x86, 0x0c, 0xa8, 0xfc, 0x4a,
	0xdf, 0xc5, 0xf6, 0x96, 0xa1, 0x6c, 0xe2, 0x5b, 0x6f, 0xbe, 0x4a, 0x4e, 0x10, 0x2d, 0xf0, 0x18,
	0x0e, 0xa2, 0x53, 0xc7, 0xcd, 0xdb, 0x3c, 0x76, 0xd6, 0xcc, 0xa8, 0xe4, 0x96, 0xcd, 0x3c, 0x86,
	0xa3, 0x61, 0xc4, 0x23, 0xab, 0xe4, 0x36, 0xe3, 0xa7, 0x80, 0xf2, 0x60, 0x71, 0x45, 0xfc, 0x39,
	0xd4, 0x13, 0x16, 0xe5, 0xab, 0xf9, 0x43, 0x03, 0xc1, 0xef, 0x35, 0x68, 0x6c, 0x10, 0xb7, 0x38,
	0xc3, 0xf6, 0x86, 0x40, 0x5f, 0xc2, 0x2e, 0x53, 0xc2, 0xf7, 0xe6, 0x1a, 0x77, 0x4c, 0xd6, 0x8c,
	0x29, 0xf8, 0x83, 0x06, 0x90, 0xc1, 0x5b, 0xb9, 0x27, 0xdb, 0x56, 0xe5, 0xff, 0x6c, 0x6b, 0xd3,
	0x74, 0xd5, 0xed, 0x4c, 0x87, 0xbe, 0x83, 0xda, 0x2d, 0x15, 0x9e, 0x3f, 0xe7, 0xcd, 0x9d, 0x6d,
	0x46, 0x99, 0xb0, 0xcf, 0xbf, 0x81, 0xdd, 0xf8, 0xc2, 0xea, 0x50, 0x1b, 0x8d, 0xfb, 0xfd, 0xc1,
	0x68, 0x64, 0x94, 0xe4, 0xe2, 0xb9, 0x39, 0x7c, 0x39, 0x26, 0x03, 0x43, 0x93, 0x0b, 0x32, 0xb6,
	0xac, 0xa1, 0x75, 0x65, 0x94, 0xcf, 0xdf, 0x6b, 0xb0, 0xd7, 0xf3, 0x38, 0x75, 0xe4, 0xff, 0xa7,
	0x01, 0x47, 0x43, 0xeb, 0x95, 0xf9, 0x72, 0xf8, 0x6c, 0xd2, 0x33, 0x47, 0x83, 0x89, 0x63, 0x13,
	0xd7, 0x28, 0xa1, 0x63, 0x38, 0x7c, 0x61, 0xbe, 0x32, 0x73, 0xd8, 0xbf, 0x16, 0x3a, 0x82, 0x83,
	0x2b, 0x3b, 0x07, 0x7d, 0xb0, 0x51, 0x03, 0x0c, 0xcb, 0x7e, 0x36, 0x78, 0x31, 0xca, 0xc1, 0xff,
	0x38, 0x12, 0x76, 0x5e, 0xbb, 0xd7, 0xb6, 0x95, 0x83, 0xff, 0xfa, 0x11, 0x21, 0x78, 0xd4, 0x77,
	0x9c, 0x1c, 0xf6, 0x07, 0xe9, 0xde, 0x40, 0x5d, 0x0e, 0x66, 0xf0, 0x3b, 0x9d, 0xae, 0xe4, 0x7f,
	0x22, 0x79, 0x01, 0x2e, 0xa1, 0x2a, 0x5f, 0x22, 0x54, 0xdf, 0x18, 0xab, 0x72, 0x5b, 0xab, 0xb1,
	0x39, 0x6c, 0xd5, 0x1a, 0x5c, 0xea, 0xfe, 0xb2, 0xfe, 0x52, 0x25, 0x6a, 0x43, 0xd8, 0x63, 0x0a,
	0xa6, 0x0c, 0x7d, 0x92, 0x7e, 0x5b, 0xf0, 0xa6, 0xb5, 0x4e, 0x1f, 0xc8, 0xa6, 0x15, 0xfe, 0xd6,
	0xd2, 0x7b, 0x22, 0x6b, 0x67, 0x15, 0x62, 0xaf, 0xa1, 0x4c, 0xa1, 0xe8, 0xa2, 0xb4, 0x3e, 0x7d,
	0x28, 0x9d, 0x54, 0x40, 0x3f, 0x40, 0x85, 0xad, 0x96, 0xa8, 0x75, 0x8f, 0x98, 0xde, 0xd5, 0xd6,
	0xe3, 0xc2, 0x5c, 0xa2, 0xd0, 0xbb, 0x80, 0x86, 0x1f, 0x74, 0x82, 0x90, 0x2e, 0xa7, 0x74, 0xc9,
	0x57, 0x3c, 0x61, 0xf7, 0x9a, 0x05, 0xcd, 0x71, 0xe4, 0x5b, 0xef, 0x68, 0x6f, 0x76, 0xd5, 0xa3,
	0x7f, 0xf1, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x85, 0x0a, 0x80, 0x54, 0x13, 0x08, 0x00, 0x00,
}

For raspberry Pi, it would firstly register the views and exporters. Only after the inital setup that Pi could respond
to the record request from the arduino.
For Arduino, after it collects sensor data, it encapsulates the sensor data based on the required format and sends the
record request to the Pi. Then it could not send another record request until it receives a positive response.  If it
receives a negative response, it would retry sending the request. Temporarily it would block when waiting for the
response. We might add exponential back-off mechanism in the future.

Every request or response is ended with a newline character '\n'. Don't add any newLine character in your argument.

The following example could illustrate the process.

Raspberry Pi:
When the service starts, the following view would be registered.

	ProjectId : project-id
	View:
		Name : "opencensus.io/views/protocol_test"
		Description : "View for Protocol Test"
		Aggregation :
        		AggregationType : view.LastValue()
        		AggregationValue : []
        Measure:
        		Name : "my.org/measure/Measure_Test"
        		Description : "Measure Test"
        		Unit : 1
        		MeasureType: int64
        TagKeys: ["DeviceId", "SampleDate"]

	ReportPeriod : 1

Before the registration, the Raspberry Pi would make a negative response to the record request from Arduino.

Arduino:
Every time it collects sensor data, it needs to encapsulate it into a record request based on the following format.
{
	"Measure":{
		"Name": "my.org/measure/Measure_Test"
		"MeasureType": "int64" or "float64"
		"MeasureValue": "1"
	}
	"TagValues": ["Arduino-1", "2017-01-05"]
}

Note that the tag Values should follow the order as it is in the tag.Keys defined in the raspberry Pi. In the above
example, it could be ["", "2017-01-05"] or ["Arduino-1", ""] or ["Arduino-1"]. But it could not be ["2017-01-05"]. You
need to explicitly use an empty string to represent null tag values if the value for the following tag key is not null.

Typical example for the response from Raspberry Pi would be as below:
{
	"Code": 200 (OK) or 404 (Fail)
	"Info": "Record Successfully!"
}